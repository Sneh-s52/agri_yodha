# Weather Agent System Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES
# =============================================================================

# OpenAI API Configuration
# Your OpenAI API key for GPT models
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=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

# =============================================================================
# WEATHER DATA SOURCES (Optional - system will use mock data if not configured)
# =============================================================================

# Indian Meteorological Department (IMD) API
# TODO: Replace with actual IMD API key when available
IMD_API_KEY=

# =============================================================================
# DATABASE CONFIGURATIONS (Optional)
# =============================================================================

# Time-series Database for Historical Weather Data
# Options: timescaledb, influxdb
TIMESERIES_DB_TYPE=timescaledb
TIMESERIES_DB_URI=postgresql://username:password@localhost:5432/weather_db
TIMESERIES_DB_USER=your_db_username
TIMESERIES_DB_PASSWORD=your_db_password

# Alternative InfluxDB configuration
# TIMESERIES_DB_TYPE=influxdb
# INFLUXDB_URL=http://localhost:8086
# INFLUXDB_TOKEN=your-influxdb-token
# INFLUXDB_ORG=your-organization
# INFLUXDB_BUCKET=weather-data

# Vector Database for Climate Reports
# Options: mongodb, qdrant
VECTOR_DB_TYPE=mongodb
CLIMATE_MONGODB_URI=mongodb+srv://adwik-wiz:group_user_78@cluster.mongodb.net/climate_reports
QDRANT_URL=https://bfbf9067-2ff0-4e8d-b2c2-16a0b7db7615.europe-west3-0.gcp.cloud.qdrant.io
QDRANT_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.KWZ4CKgjKMMH0TyeEqlBS51ns7eCgen_hxhTwQ1VYXA

# =============================================================================
# SATELLITE DATA CONFIGURATION (Optional)
# =============================================================================

# Google Earth Engine for Satellite Analysis
# Get service account from: https://console.cloud.google.com/
GEE_SERVICE_ACCOUNT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GEE_PRIVATE_KEY_PATH=/path/to/your/private-key.json

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# OpenAI Model Configuration
OPENAI_MODEL=gpt-4o-mini

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=weather_agent.log

# API Rate Limiting
MAX_REQUESTS_PER_MINUTE=60
REQUEST_TIMEOUT=30

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example TimescaleDB connection for local development:
# TIMESERIES_DB_URI=postgresql://postgres:password@localhost:5432/weather_db

# Example MongoDB Atlas connection:
# CLIMATE_MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/climate_reports?retryWrites=true&w=majority

# Example InfluxDB Cloud connection:
# INFLUXDB_URL=https://your-region.influxdata.io
# INFLUXDB_TOKEN=your-cloud-token

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Keep your API keys secure and rotate them regularly
# 3. Use environment-specific .env files for different deployments
# 4. Consider using a secrets management service for production
# 5. Ensure database connections use SSL/TLS in production
# 6. Limit API key permissions to only required scopes
